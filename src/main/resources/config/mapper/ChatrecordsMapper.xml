<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiuGEN.mapper.ChatrecordsMapper">
    <!--查询用户未读信息 -->
    <select id="selUnreadMessage" resultType="chatrecord">
        select * from (select DISTINCT * from chatrecords where touserid =#{touserid} and state = #{state} order by sendtime desc) test GROUP BY fromuserid
    </select>
    <!--将聊天记录插入在数据库中-->
    <insert id="saveMessage" parameterType="chatrecord">
        insert into chatrecords(rid,fromuserid,touserid,message,state,sendtime)
                        value(default,#{fromuserid},#{touserid},#{message},#{state},default)
    </insert>
    <!--查询用户与某个用户聊天信息 -->
    <select id="selAllMessageToOnePerson" resultType="chatrecord">
        select * from chatrecords where (fromuserid = #{userid} and touserid = #{friendid}) or (touserid  =#{userid} and fromuserid =#{friendid}) ORDER BY sendtime asc;
    </select>

    <!--查询用户与某个用户聊天信息最新一条 -->
    <select id="selOneMessageToOnePerson" resultType="chatrecord">
        select * from chatrecords where (fromuserid = #{userid} and touserid = #{friendid}) or (touserid  =#{userid} and fromuserid =#{friendid}) ORDER BY sendtime desc limit 1;
    </select>

    <!--查询用户最新记录-->
    <select id="selOneMessageToOne" resultType="chatrecord">
        select * from (select DISTINCT * from chatrecords where touserid =#{userid} or fromuserid = #{userid} order by sendtime desc) test GROUP BY fromuserid
    </select>

    <!--修改聊天记录状态-->
    <update id="updateChatrecordsState">
        update chatrecords set state =#{state} where rid in (${ids})
    </update>
</mapper>